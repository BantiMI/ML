import numpy as np

a1 = [0.5, 0.2, 0.3, 0.2, 0.4, 0.2]
a2 = [0.2, 0.1, 0.2, 0.2, 0.8, 0.2, 0.4, 0.2, 0.6]

W1 = []
W2 = []
for i in range(9):
    W1.append(a1)
for i in range(3):
    W2.append(a2)

W1 = np.array(W1)
W2 = np.array(W2)

def softmax(out2):
    out2 = out2 - np.max(out2)
    exp = np.exp(out2)
    sum_exp = np.sum(exp)
    itog = exp / sum_exp
    return itog

def act(x):
    return (1 / (1 + np.exp(-x)))

def dact(x):
    return (act(x)*(1-act(x)))

def go(inp):
    global W1, W2
    sum = np.dot(W1, inp)
    out = np.array([act(x) for x in sum])

    sum2 = np.dot(W2, out)
    out2 = softmax(sum2)
    return (sum, sum2, out, out2)

def train(epoch):
    global W1, W2
    lmd = 0.01
    N = 400000
    count = len(epoch)
    for k in range(N+1):
        x = epoch[np.random.randint(0, count)]
        sum, sum2, out, out2 = go(x[0:6])

        j = x[-3:].index(1)

        loss = -1 * np.log(out2[j])
        if k % 20000 == 0:
            print(loss)

        delta = out2 - x[-3:]
        # print(x, out, delta)

        W2[0][0] -= lmd * delta[0] * out[0]
        W2[0][1] -= lmd * delta[0] * out[1]
        W2[0][2] -= lmd * delta[0] * out[2]
        W2[0][3] -= lmd * delta[0] * out[3]
        W2[0][4] -= lmd * delta[0] * out[4]
        W2[0][5] -= lmd * delta[0] * out[5]
        W2[0][6] -= lmd * delta[0] * out[6]
        W2[0][7] -= lmd * delta[0] * out[7]
        W2[0][8] -= lmd * delta[0] * out[8]

        W2[1][0] -= lmd * delta[1] * out[0]
        W2[1][1] -= lmd * delta[1] * out[1]
        W2[1][2] -= lmd * delta[1] * out[2]
        W2[1][3] -= lmd * delta[1] * out[3]
        W2[1][4] -= lmd * delta[1] * out[4]
        W2[1][5] -= lmd * delta[1] * out[5]
        W2[1][6] -= lmd * delta[1] * out[6]
        W2[1][7] -= lmd * delta[1] * out[7]
        W2[1][8] -= lmd * delta[1] * out[8]

        W2[2][0] -= lmd * delta[2] * out[0]
        W2[2][1] -= lmd * delta[2] * out[1]
        W2[2][2] -= lmd * delta[2] * out[2]
        W2[2][3] -= lmd * delta[2] * out[3]
        W2[2][4] -= lmd * delta[2] * out[4]
        W2[2][5] -= lmd * delta[2] * out[5]
        W2[2][6] -= lmd * delta[2] * out[6]
        W2[2][7] -= lmd * delta[2] * out[7]
        W2[2][8] -= lmd * delta[2] * out[8]

        sigm0 = delta[0] * W2[0][0] + delta[1] * W2[1][0] + delta[2] * W2[2][0]
        sigm1 = delta[0] * W2[0][1] + delta[1] * W2[1][1] + delta[2] * W2[2][1]
        sigm2 = delta[0] * W2[0][2] + delta[1] * W2[1][2] + delta[2] * W2[2][2]
        sigm3 = delta[0] * W2[0][3] + delta[1] * W2[1][3] + delta[2] * W2[2][3]
        sigm4 = delta[0] * W2[0][4] + delta[1] * W2[1][4] + delta[2] * W2[2][4]
        sigm5 = delta[0] * W2[0][5] + delta[1] * W2[1][5] + delta[2] * W2[2][5]
        sigm6 = delta[0] * W2[0][6] + delta[1] * W2[1][6] + delta[2] * W2[2][6]
        sigm7 = delta[0] * W2[0][7] + delta[1] * W2[1][7] + delta[2] * W2[2][7]
        sigm8 = delta[0] * W2[0][8] + delta[1] * W2[1][8] + delta[2] * W2[2][8]

        delta0 = sigm0 * dact(sum[0])
        delta1 = sigm1 * dact(sum[1])
        delta2 = sigm2 * dact(sum[2])
        delta3 = sigm3 * dact(sum[3])
        delta4 = sigm4 * dact(sum[4])
        delta5 = sigm5 * dact(sum[5])
        delta6 = sigm6 * dact(sum[6])
        delta7 = sigm7 * dact(sum[7])
        delta8 = sigm8 * dact(sum[8])
        # print(W1)

        x_in = np.array(x[0:6])

        W1[0, :] -= x_in * delta0 * lmd
        W1[1, :] -= x_in * delta1 * lmd
        W1[2, :] -= x_in * delta2 * lmd
        W1[3, :] -= x_in * delta3 * lmd
        W1[4, :] -= x_in * delta4 * lmd
        W1[5, :] -= x_in * delta5 * lmd
        W1[6, :] -= x_in * delta6 * lmd
        W1[7, :] -= x_in * delta7 * lmd
        W1[8, :] -= x_in * delta8 * lmd


ff = open("V2.3 Машины Файл.txt")
epoch = []
for s in ff:
    epoch.append(list(map(int, s.split())))
train(epoch)

for _ in range(100):
    r = input()
    r = list(map(int, r.split()))
    sum, sum2, put, out2 = go(r)
    print(out2)
    for i in range(len(out2[:])):
        out2[i] = round(out2[i]*100, 2)
    print("БМВ -", out2[0], "%")
    print("Тайота -", out2[1], "%")
    print("Тесла -", out2[2], "%")

    print()

    i = max(out2)
    for j in range(len(out2[:])):
        if out2[j] == i:
            b = j
            break
    if b == 0:
        print("Это БМВ")
    elif b == 1:
        print("Это Тайота")
    elif b == 2:
        print("Это Тесла")
